# Copyright (c) 2018 Meteca SA. All right reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


menu.mcu=Processor
menu.partitions=ESP flash partition
menu.usb=USB port
menu.variant=Variant


# ESP Console port
# ------------------------------------------
mbc_esp.name=Briki MBC-WB - esp
mbc_esp.vid.0=0x3112
mbc_esp.pid.0=0x0001
mbc_esp.descriptor.0=Briki MBC-WB (esp)
mbc_esp.hide=true
mbc_esp.build.board=MBC-WB


# SAMD Console port
# ------------------------------------------
mbc_samd.name=Briki MBC-WB - samd
mbc_samd.vid.0=0x3112
mbc_samd.pid.0=0x0001
mbc_samd.descriptor.0=Briki MBC-WB (samd)
mbc_samd.hide=true
mbc_samd.build.board=MBC-WB



# MBC-WB
# ------------------------------------------

# Common parameters
mbc.name=Briki MBC-WB
mbc.vid.0=0x3112
mbc.pid.0=0x0001
mbc.vid.1=0x3112
mbc.pid.1=0x0002
mbc.build.vid=0x3112
mbc.build.pid=0x0001
mbc.build.board=MBC-WB
mbc.build.core=samd21
mbc.build.usb_product="Briki MBC-WB"
mbc.build.usb_manufacturer="Meteca SA"

# Menu options
mbc.menu.partitions.ffat=FFAT storage (1.5MB)
mbc.menu.partitions.ffat.build.partitions=8MB_ffat
mbc.menu.partitions.spiffs=SPIFFS storage (1.5MB)
mbc.menu.partitions.spiffs.build.partitions=8MB_spiffs

mbc.menu.usb.enabled=Double USB port
mbc.menu.usb.enabled.build.extraCDC=MULTIPLE_CDC
mbc.menu.usb.disabled=Single USB port
mbc.menu.usb.disabled.build.extraCDC=SINGLE_CDC

mbc.menu.variant.default=default
mbc.menu.variant.default.build.var=
mbc.menu.variant.custom=custom
mbc.menu.variant.custom.build.var=-DCUSTOM_VARIANT

#--------------------------------------------------------------------------------------#
#                                SAM D21
#--------------------------------------------------------------------------------------#

mbc.menu.mcu.samd=SAMD21

mbc.menu.mcu.samd.upload.tool=mbctool
mbc.menu.mcu.samd.upload.protocol=sam-ba
mbc.menu.mcu.samd.upload.maximum_size=253952
mbc.menu.mcu.samd.upload.maximum_data_size=32768
mbc.menu.mcu.samd.upload.use_1200bps_touch=false
mbc.menu.mcu.samd.upload.wait_for_upload_port=false
mbc.menu.mcu.samd.upload.native_usb=true
mbc.menu.mcu.samd.upload.target=samd
mbc.menu.mcu.samd.upload.partitions=
mbc.menu.mcu.samd.upload.boot_file=
mbc.menu.mcu.samd.upload.part_file=
mbc.menu.mcu.samd.upload.sketch_offset=
mbc.menu.mcu.samd.upload.network_param=-c

mbc.menu.mcu.samd.build.mcu=cortex-m0plus
mbc.menu.mcu.samd.build.f_cpu=48000000L
mbc.menu.mcu.samd.build.core=samd21
mbc.menu.mcu.samd.build.extra_flags=-D__SAMD21G18A__ {build.usb_flags} {build.var}
mbc.menu.mcu.samd.build.sub_arch=SAMD
mbc.menu.mcu.samd.build.ldscript=linker_scripts/gcc/flash_with_bootloader.ld
mbc.menu.mcu.samd.build.openocdscript=openocd_scripts/arduino_zero.cfg
mbc.menu.mcu.samd.build.variant=briki_mbcwb_samd21
mbc.menu.mcu.samd.build.variant_system_lib=
mbc.menu.mcu.samd.build.compiler.path={runtime.tools.arm-none-eabi-gcc-7-2017q4.path}/bin/
mbc.menu.mcu.samd.build.compiler.c.cmd=arm-none-eabi-gcc
mbc.menu.mcu.samd.build.compiler.c.flags=-mcpu={build.mcu} -mthumb -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -MMD -DBRIKI_MBC_WB_SAMD -D{build.extraCDC}
mbc.menu.mcu.samd.build.compiler.c.elf.flags=-Os -Wl,--gc-sections -save-temps
mbc.menu.mcu.samd.build.compiler.S.flags=-c -g -w -x assembler-with-cpp -MMD -DBRIKI_MBC_WB_SAMD
mbc.menu.mcu.samd.build.compiler.cpp.cmd=arm-none-eabi-g++
mbc.menu.mcu.samd.build.compiler.cpp.flags=-mcpu={build.mcu} -mthumb -c -g -Os -w -std=gnu++11 -ffunction-sections -fdata-sections -fno-threadsafe-statics -nostdlib --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -MMD -DBRIKI_MBC_WB_SAMD -D{build.extraCDC}
mbc.menu.mcu.samd.build.compiler.ar.cmd=arm-none-eabi-ar
mbc.menu.mcu.samd.build.compiler.ar.flags=rcs
mbc.menu.mcu.samd.build.compiler.objcopy.cmd=arm-none-eabi-objcopy
mbc.menu.mcu.samd.build.compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0
mbc.menu.mcu.samd.build.compiler.elf2hex.bin.flags=-O binary
mbc.menu.mcu.samd.build.compiler.elf2hex.hex.flags=-O ihex -R .eeprom
mbc.menu.mcu.samd.build.compiler.elf2hex.cmd=arm-none-eabi-objcopy
mbc.menu.mcu.samd.build.compiler.ldflags=-mcpu={build.mcu} -mthumb -Wl,--cref -Wl,--check-sections -Wl,--gc-sections -Wl,--unresolved-symbols=report-all -Wl,--warn-common -Wl,--warn-section-align
mbc.menu.mcu.samd.build.compiler.size.cmd=arm-none-eabi-size
mbc.menu.mcu.samd.build.compiler.readelf.cmd=arm-none-eabi-readelf
mbc.menu.mcu.samd.build.compiler.arm.cmsis.c.flags="-I{runtime.tools.CMSIS-4.5.0.path}/CMSIS/Include/" "-I{runtime.tools.CMSIS-Atmel-1.2.0.path}/CMSIS/Device/ATMEL/"
mbc.menu.mcu.samd.build.compiler.arm.cmsis.ldflags="-L{runtime.tools.CMSIS-4.5.0.path}/CMSIS/Lib/GCC/" -larm_cortexM0l_math

mbc.menu.mcu.samd.build.combine.pattern="{compiler.path}{compiler.c.elf.cmd}"  "-L{build.path}" {compiler.c.elf.flags} {compiler.c.elf.extra_flags} "-T{build.variant.path}/{build.ldscript}" "-Wl,-Map,{build.path}/{build.project_name}.map" --specs=nano.specs --specs=nosys.specs {compiler.ldflags} -o "{build.path}/{build.project_name}.elf" {object_files} -Wl,--start-group {compiler.arm.cmsis.ldflags} -lm "{build.path}/{archive_file}" -Wl,--end-group
mbc.menu.mcu.samd.build.bin.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.bin.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
mbc.menu.mcu.samd.build.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.hex.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
mbc.menu.mcu.samd.build.hex.pattern.linux="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.hex.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
mbc.menu.mcu.samd.recipe.size.regex=\.text\s+([0-9]+).*
mbc.menu.mcu.samd.recipe.size.regex.data=^(?:\.data|\.rodata|\.bss)\s+([0-9]+).*

mbc.menu.mcu.samd.bootloader.tool=openocd
mbc.menu.mcu.samd.bootloader.file=briki_mbc-wb/samd21_sam_ba.hex

#--------------------------------------------------------------------------------------#
#                                ESP 32
#--------------------------------------------------------------------------------------#

mbc.menu.mcu.esp=ESP32

mbc.menu.mcu.esp.upload.tool=mbctool
mbc.menu.mcu.esp.upload.maximum_size=3407872
mbc.menu.mcu.esp.upload.maximum_data_size=327680
mbc.menu.mcu.esp.upload.wait_for_upload_port=true
mbc.menu.mcu.esp.upload.target=esp
mbc.menu.mcu.esp.upload.partitions=0xe000 {runtime.platform.path}/tools/partitions/boot_app0.bin
mbc.menu.mcu.esp.upload.boot_file=0x1000 {runtime.platform.path}/tools/sdk/bin/bootloader_qio_80m.bin
mbc.menu.mcu.esp.upload.part_file=0x8000 {build.path}/{build.project_name}.partitions.bin
mbc.menu.mcu.esp.upload.sketch_offset=0x10000
mbc.menu.mcu.esp.upload.network_param=

mbc.menu.mcu.esp.build.mcu=esp32
mbc.menu.mcu.esp.build.core=esp32
mbc.menu.mcu.esp.build.variant=briki_mbcwb_esp32
mbc.menu.mcu.esp.build.sub_arch=ESP32
mbc.menu.mcu.esp.build.f_cpu=240000000L
mbc.menu.mcu.esp.build.flash_size=8MB
mbc.menu.mcu.esp.build.flash_freq=80m
mbc.menu.mcu.esp.build.flash_mode=dio
mbc.menu.mcu.esp.build.boot=dio
mbc.menu.mcu.esp.build.defines=
mbc.menu.mcu.esp.build.flash_mode=dio
mbc.menu.mcu.esp.build.code_debug=0
mbc.menu.mcu.esp.build.extra_flags=-DESP32 -DCORE_DEBUG_LEVEL={build.code_debug} {build.defines} {build.var}
mbc.menu.mcu.esp.build.compiler.path={runtime.tools.xtensa-esp32-elf-gcc.path}/bin/
mbc.menu.mcu.esp.build.compiler.sdk.path={runtime.platform.path}/tools/sdk
mbc.menu.mcu.esp.build.compiler.c.cmd=xtensa-esp32-elf-gcc
mbc.menu.mcu.esp.build.compiler.cpreprocessor.flags=-DESP_PLATFORM -DMBEDTLS_CONFIG_FILE="mbedtls/esp_config.h" -DHAVE_CONFIG_H "-I{build.compiler.sdk.path}/include/config" "-I{build.compiler.sdk.path}/include/app_trace" "-I{build.compiler.sdk.path}/include/app_update" "-I{build.compiler.sdk.path}/include/asio" "-I{build.compiler.sdk.path}/include/bootloader_support" "-I{build.compiler.sdk.path}/include/bt" "-I{build.compiler.sdk.path}/include/coap" "-I{build.compiler.sdk.path}/include/console" "-I{build.compiler.sdk.path}/include/driver" "-I{build.compiler.sdk.path}/include/esp-tls" "-I{build.compiler.sdk.path}/include/esp32" "-I{build.compiler.sdk.path}/include/esp_adc_cal" "-I{build.compiler.sdk.path}/include/esp_event" "-I{build.compiler.sdk.path}/include/esp_http_client" "-I{build.compiler.sdk.path}/include/esp_http_server" "-I{build.compiler.sdk.path}/include/esp_https_ota" "-I{build.compiler.sdk.path}/include/esp_ringbuf" "-I{build.compiler.sdk.path}/include/ethernet" "-I{build.compiler.sdk.path}/include/expat" "-I{build.compiler.sdk.path}/include/fatfs" "-I{build.compiler.sdk.path}/include/freemodbus" "-I{build.compiler.sdk.path}/include/freertos" "-I{build.compiler.sdk.path}/include/heap" "-I{build.compiler.sdk.path}/include/idf_test" "-I{build.compiler.sdk.path}/include/jsmn" "-I{build.compiler.sdk.path}/include/json" "-I{build.compiler.sdk.path}/include/libsodium" "-I{build.compiler.sdk.path}/include/log" "-I{build.compiler.sdk.path}/include/lwip" "-I{build.compiler.sdk.path}/include/mbedtls" "-I{build.compiler.sdk.path}/include/mdns" "-I{build.compiler.sdk.path}/include/micro-ecc" "-I{build.compiler.sdk.path}/include/mqtt" "-I{build.compiler.sdk.path}/include/newlib" "-I{build.compiler.sdk.path}/include/nghttp" "-I{build.compiler.sdk.path}/include/nvs_flash" "-I{build.compiler.sdk.path}/include/openssl" "-I{build.compiler.sdk.path}/include/protobuf-c" "-I{build.compiler.sdk.path}/include/protocomm" "-I{build.compiler.sdk.path}/include/pthread" "-I{build.compiler.sdk.path}/include/sdmmc" "-I{build.compiler.sdk.path}/include/smartconfig_ack" "-I{build.compiler.sdk.path}/include/soc" "-I{build.compiler.sdk.path}/include/spi_flash" "-I{build.compiler.sdk.path}/include/spiffs" "-I{build.compiler.sdk.path}/include/tcp_transport" "-I{build.compiler.sdk.path}/include/tcpip_adapter" "-I{build.compiler.sdk.path}/include/ulp" "-I{build.compiler.sdk.path}/include/vfs" "-I{build.compiler.sdk.path}/include/wear_levelling" "-I{build.compiler.sdk.path}/include/wifi_provisioning" "-I{build.compiler.sdk.path}/include/wpa_supplicant" "-I{build.compiler.sdk.path}/include/xtensa-debug-module" "-I{build.compiler.sdk.path}/include/esp32-camera" "-I{build.compiler.sdk.path}/include/esp-face" "-I{build.compiler.sdk.path}/include/fb_gfx"
mbc.menu.mcu.esp.build.compiler.c.flags=-std=gnu99 -Os -g3 -fstack-protector -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -mlongcalls -nostdlib -w -Wpointer-arith -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wno-unused-parameter -Wno-sign-compare -Wno-old-style-declaration -MMD -c {build.compiler.cpreprocessor.flags} -DBRIKI_MBC_WB_ESP -D{build.extraCDC}
mbc.menu.mcu.esp.build.compiler.cpp.cmd=xtensa-esp32-elf-g++
mbc.menu.mcu.esp.build.compiler.cpp.flags=-std=gnu++11 -fno-exceptions -Os -g3 -Wpointer-arith -fexceptions -fstack-protector -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -mlongcalls -nostdlib -w -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wno-unused-parameter -Wno-sign-compare -fno-rtti -MMD -c {build.compiler.cpreprocessor.flags} -DBRIKI_MBC_WB_ESP -D{build.extraCDC}
mbc.menu.mcu.esp.build.compiler.S.flags=-c -g3 -w -x assembler-with-cpp -MMD -mlongcalls {build.compiler.cpreprocessor.flags} -DBRIKI_MBC_WB_ESP
mbc.menu.mcu.esp.build.compiler.c.elf.flags=-nostdlib "-L{build.compiler.sdk.path}/lib" "-L{build.compiler.sdk.path}/ld" -T esp32_out.ld -T esp32.common.ld -T esp32.rom.ld -T esp32.peripherals.ld -T esp32.rom.spiram_incompatible_fns.ld -u ld_include_panic_highint_hdl -u call_user_start_cpu0 -Wl,--gc-sections -Wl,-static -Wl,--undefined=uxTopUsedPriority  -u __cxa_guard_dummy -u __cxx_fatal_exception
mbc.menu.mcu.esp.build.compiler.c.elf.libs=-lgcc -lopenssl -lbtdm_app -lfatfs -lwps -lcoexist -lwear_levelling -lesp_http_client -lprotobuf-c -lhal -lnewlib -ldriver -lbootloader_support -lpp -lfreemodbus -lmesh -lsmartconfig -ljsmn -lwpa -lethernet -lphy -lapp_trace -lconsole -lulp -lwpa_supplicant -lfreertos -lbt -lmicro-ecc -lesp32-camera -lcxx -lxtensa-debug-module -ltcp_transport -lmdns -lvfs -lesp_ringbuf -lsoc -lcore -lfb_gfx -lsdmmc -llibsodium -lcoap -ltcpip_adapter -lprotocomm -lesp_event -limage_util -lc_nano -lesp-tls -lasio -lrtc -lspi_flash -lwpa2 -lwifi_provisioning -lesp32 -lface_recognition -lapp_update -lnghttp -lspiffs -lface_detection -lespnow -lnvs_flash -lesp_adc_cal -llog -ldl_lib -lsmartconfig_ack -lexpat -lm -lfr -lmqtt -lc -lheap -lmbedtls -llwip -lnet80211 -lesp_http_server -lpthread -ljson -lesp_https_ota -lfd -lstdc++
mbc.menu.mcu.esp.build.compiler.as.cmd=xtensa-esp32-elf-as
mbc.menu.mcu.esp.build.compiler.ar.cmd=xtensa-esp32-elf-ar
mbc.menu.mcu.esp.build.compiler.ar.flags=cru
mbc.menu.mcu.esp.build.compiler.size.cmd=xtensa-esp32-elf-size
mbc.menu.mcu.esp.build.compiler.arm.cmsis.c.flags=
mbc.menu.mcu.esp.build.compiler.arm.cmsis.ldflags=

mbc.menu.mcu.esp.build.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {compiler.c.elf.flags} {compiler.c.elf.extra_flags} -Wl,--start-group {object_files} "{build.path}/{archive_file}" {build.compiler.c.elf.libs} -Wl,--end-group -Wl,-EL -o "{build.path}/{build.project_name}.elf"
mbc.menu.mcu.esp.build.bin.pattern={tools.gen_esp32part.cmd} -q "{runtime.platform.path}/tools/partitions/{build.partitions}.csv" "{build.path}/{build.project_name}.partitions.bin"
mbc.menu.mcu.esp.build.hex.pattern="{tools.esptool.path}/{tools.esptool.cmd}" --chip esp32 elf2image --flash_mode "{build.flash_mode}" --flash_freq "{build.flash_freq}" --flash_size "{build.flash_size}" -o "{build.path}/{build.project_name}.bin" "{build.path}/{build.project_name}.elf"
mbc.menu.mcu.esp.recipe.size.regex=^(?:\.iram0\.text|\.iram0\.vectors|\.dram0\.data|\.flash\.text|\.flash\.rodata|)\s+([0-9]+).*
mbc.menu.mcu.esp.recipe.size.regex.data=^(?:\.dram0\.data|\.dram0\.bss|\.noinit)\s+([0-9]+).*


# ABC


# Common parameters

abc.name=Briki ABC (MBC-WB)
abc.vid.0=0x3112
abc.pid.0=0x0001
abc.vid.1=0x3112
abc.pid.1=0x0002
abc.build.vid=0x3112
abc.build.pid=0x0001
abc.build.board=ABC
abc.build.core=samd21
abc.build.usb_product="Briki MBC-WB"
abc.build.usb_manufacturer="Meteca SA"

# Menu options
abc.menu.partitions.ffat=FFAT storage (1.5MB)
abc.menu.partitions.ffat.build.partitions=8MB_ffat
abc.menu.partitions.spiffs=SPIFFS storage (1.5MB)
abc.menu.partitions.spiffs.build.partitions=8MB_spiffs

abc.menu.usb.enabled=Double USB port
abc.menu.usb.enabled.build.extraCDC=MULTIPLE_CDC
abc.menu.usb.disabled=Single USB port
abc.menu.usb.disabled.build.extraCDC=SINGLE_CDC

abc.menu.variant.default=default
abc.menu.variant.default.build.var=
abc.menu.variant.custom=custom
abc.menu.variant.custom.build.var=-DCUSTOM_VARIANT

#--------------------------------------------------------------------------------------#
#                                SAM D21
#--------------------------------------------------------------------------------------#

abc.menu.mcu.samd=SAMD21

abc.menu.mcu.samd.upload.tool=mbctool
abc.menu.mcu.samd.upload.protocol=sam-ba
abc.menu.mcu.samd.upload.maximum_size=253952
abc.menu.mcu.samd.upload.maximum_data_size=32768
abc.menu.mcu.samd.upload.use_1200bps_touch=false
abc.menu.mcu.samd.upload.wait_for_upload_port=false
abc.menu.mcu.samd.upload.native_usb=true
abc.menu.mcu.samd.upload.target=samd
abc.menu.mcu.samd.upload.partitions=
abc.menu.mcu.samd.upload.boot_file=
abc.menu.mcu.samd.upload.part_file=
abc.menu.mcu.samd.upload.sketch_offset=
abc.menu.mcu.samd.upload.network_param=-c

abc.menu.mcu.samd.build.mcu=cortex-m0plus
abc.menu.mcu.samd.build.f_cpu=48000000L
abc.menu.mcu.samd.build.core=samd21
abc.menu.mcu.samd.build.extra_flags=-DBRIKI_ABC -D__SAMD21G18A__ {build.usb_flags} {build.var}
abc.menu.mcu.samd.build.sub_arch=SAMD
abc.menu.mcu.samd.build.ldscript=linker_scripts/gcc/flash_with_bootloader.ld
abc.menu.mcu.samd.build.openocdscript=openocd_scripts/arduino_zero.cfg
abc.menu.mcu.samd.build.variant=briki_mbcwb_samd21
abc.menu.mcu.samd.build.variant_system_lib=
abc.menu.mcu.samd.build.compiler.path={runtime.tools.arm-none-eabi-gcc-7-2017q4.path}/bin/
abc.menu.mcu.samd.build.compiler.c.cmd=arm-none-eabi-gcc
abc.menu.mcu.samd.build.compiler.c.flags=-mcpu={build.mcu} -mthumb -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -MMD -DBRIKI_MBC_WB_SAMD -D{build.extraCDC}
abc.menu.mcu.samd.build.compiler.c.elf.flags=-Os -Wl,--gc-sections -save-temps
abc.menu.mcu.samd.build.compiler.S.flags=-c -g -w -x assembler-with-cpp -MMD -DBRIKI_MBC_WB_SAMD
abc.menu.mcu.samd.build.compiler.cpp.cmd=arm-none-eabi-g++
abc.menu.mcu.samd.build.compiler.cpp.flags=-mcpu={build.mcu} -mthumb -c -g -Os -w -std=gnu++11 -ffunction-sections -fdata-sections -fno-threadsafe-statics -nostdlib --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -MMD -DBRIKI_MBC_WB_SAMD -D{build.extraCDC}
abc.menu.mcu.samd.build.compiler.ar.cmd=arm-none-eabi-ar
abc.menu.mcu.samd.build.compiler.ar.flags=rcs
abc.menu.mcu.samd.build.compiler.objcopy.cmd=arm-none-eabi-objcopy
abc.menu.mcu.samd.build.compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0
abc.menu.mcu.samd.build.compiler.elf2hex.bin.flags=-O binary
abc.menu.mcu.samd.build.compiler.elf2hex.hex.flags=-O ihex -R .eeprom
abc.menu.mcu.samd.build.compiler.elf2hex.cmd=arm-none-eabi-objcopy
abc.menu.mcu.samd.build.compiler.ldflags=-mcpu={build.mcu} -mthumb -Wl,--cref -Wl,--check-sections -Wl,--gc-sections -Wl,--unresolved-symbols=report-all -Wl,--warn-common -Wl,--warn-section-align
abc.menu.mcu.samd.build.compiler.size.cmd=arm-none-eabi-size
abc.menu.mcu.samd.build.compiler.readelf.cmd=arm-none-eabi-readelf
abc.menu.mcu.samd.build.compiler.arm.cmsis.c.flags="-I{runtime.tools.CMSIS-4.5.0.path}/CMSIS/Include/" "-I{runtime.tools.CMSIS-Atmel-1.2.0.path}/CMSIS/Device/ATMEL/"
abc.menu.mcu.samd.build.compiler.arm.cmsis.ldflags="-L{runtime.tools.CMSIS-4.5.0.path}/CMSIS/Lib/GCC/" -larm_cortexM0l_math

abc.menu.mcu.samd.build.combine.pattern="{compiler.path}{compiler.c.elf.cmd}"  "-L{build.path}" {compiler.c.elf.flags} {compiler.c.elf.extra_flags} "-T{build.variant.path}/{build.ldscript}" "-Wl,-Map,{build.path}/{build.project_name}.map" --specs=nano.specs --specs=nosys.specs {compiler.ldflags} -o "{build.path}/{build.project_name}.elf" {object_files} -Wl,--start-group {compiler.arm.cmsis.ldflags} -lm "{build.path}/{archive_file}" -Wl,--end-group
abc.menu.mcu.samd.build.bin.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.bin.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
abc.menu.mcu.samd.build.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.hex.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
abc.menu.mcu.samd.recipe.size.regex=\.text\s+([0-9]+).*
abc.menu.mcu.samd.recipe.size.regex.data=^(?:\.data|\.rodata|\.bss)\s+([0-9]+).*

abc.menu.mcu.samd.bootloader.tool=openocd
abc.menu.mcu.samd.bootloader.file=briki_mbc-wb/samd21_sam_ba.hex

#--------------------------------------------------------------------------------------#
#                                ESP 32
#--------------------------------------------------------------------------------------#

abc.menu.mcu.esp=ESP32

abc.menu.mcu.esp.upload.tool=mbctool
abc.menu.mcu.esp.upload.maximum_size=3407872
abc.menu.mcu.esp.upload.maximum_data_size=327680
abc.menu.mcu.esp.upload.wait_for_upload_port=true
abc.menu.mcu.esp.upload.target=esp
abc.menu.mcu.esp.upload.partitions=0xe000 {runtime.platform.path}/tools/partitions/boot_app0.bin
abc.menu.mcu.esp.upload.boot_file=0x1000 {runtime.platform.path}/tools/sdk/bin/bootloader_qio_80m.bin
abc.menu.mcu.esp.upload.part_file=0x8000 {build.path}/{build.project_name}.partitions.bin
abc.menu.mcu.esp.upload.sketch_offset=0x10000
abc.menu.mcu.esp.upload.network_param=

abc.menu.mcu.esp.build.mcu=esp32
abc.menu.mcu.esp.build.core=esp32
abc.menu.mcu.esp.build.variant=briki_mbcwb_esp32
abc.menu.mcu.esp.build.sub_arch=ESP32
abc.menu.mcu.esp.build.f_cpu=240000000L
abc.menu.mcu.esp.build.flash_size=8MB
abc.menu.mcu.esp.build.flash_freq=80m
abc.menu.mcu.esp.build.flash_mode=dio
abc.menu.mcu.esp.build.boot=dio
abc.menu.mcu.esp.build.defines=
abc.menu.mcu.esp.build.flash_mode=dio
abc.menu.mcu.esp.build.code_debug=0
abc.menu.mcu.esp.build.extra_flags=-DBRIKI_ABC -DESP32 -DCORE_DEBUG_LEVEL={build.code_debug} {build.defines} {build.var}
abc.menu.mcu.esp.build.compiler.path={runtime.tools.xtensa-esp32-elf-gcc.path}/bin/
abc.menu.mcu.esp.build.compiler.sdk.path={runtime.platform.path}/tools/sdk
abc.menu.mcu.esp.build.compiler.c.cmd=xtensa-esp32-elf-gcc
abc.menu.mcu.esp.build.compiler.cpreprocessor.flags=-DESP_PLATFORM -DMBEDTLS_CONFIG_FILE="mbedtls/esp_config.h" -DHAVE_CONFIG_H "-I{build.compiler.sdk.path}/include/config" "-I{build.compiler.sdk.path}/include/app_trace" "-I{build.compiler.sdk.path}/include/app_update" "-I{build.compiler.sdk.path}/include/asio" "-I{build.compiler.sdk.path}/include/bootloader_support" "-I{build.compiler.sdk.path}/include/bt" "-I{build.compiler.sdk.path}/include/coap" "-I{build.compiler.sdk.path}/include/console" "-I{build.compiler.sdk.path}/include/driver" "-I{build.compiler.sdk.path}/include/esp-tls" "-I{build.compiler.sdk.path}/include/esp32" "-I{build.compiler.sdk.path}/include/esp_adc_cal" "-I{build.compiler.sdk.path}/include/esp_event" "-I{build.compiler.sdk.path}/include/esp_http_client" "-I{build.compiler.sdk.path}/include/esp_http_server" "-I{build.compiler.sdk.path}/include/esp_https_ota" "-I{build.compiler.sdk.path}/include/esp_ringbuf" "-I{build.compiler.sdk.path}/include/ethernet" "-I{build.compiler.sdk.path}/include/expat" "-I{build.compiler.sdk.path}/include/fatfs" "-I{build.compiler.sdk.path}/include/freemodbus" "-I{build.compiler.sdk.path}/include/freertos" "-I{build.compiler.sdk.path}/include/heap" "-I{build.compiler.sdk.path}/include/idf_test" "-I{build.compiler.sdk.path}/include/jsmn" "-I{build.compiler.sdk.path}/include/json" "-I{build.compiler.sdk.path}/include/libsodium" "-I{build.compiler.sdk.path}/include/log" "-I{build.compiler.sdk.path}/include/lwip" "-I{build.compiler.sdk.path}/include/mbedtls" "-I{build.compiler.sdk.path}/include/mdns" "-I{build.compiler.sdk.path}/include/micro-ecc" "-I{build.compiler.sdk.path}/include/mqtt" "-I{build.compiler.sdk.path}/include/newlib" "-I{build.compiler.sdk.path}/include/nghttp" "-I{build.compiler.sdk.path}/include/nvs_flash" "-I{build.compiler.sdk.path}/include/openssl" "-I{build.compiler.sdk.path}/include/protobuf-c" "-I{build.compiler.sdk.path}/include/protocomm" "-I{build.compiler.sdk.path}/include/pthread" "-I{build.compiler.sdk.path}/include/sdmmc" "-I{build.compiler.sdk.path}/include/smartconfig_ack" "-I{build.compiler.sdk.path}/include/soc" "-I{build.compiler.sdk.path}/include/spi_flash" "-I{build.compiler.sdk.path}/include/spiffs" "-I{build.compiler.sdk.path}/include/tcp_transport" "-I{build.compiler.sdk.path}/include/tcpip_adapter" "-I{build.compiler.sdk.path}/include/ulp" "-I{build.compiler.sdk.path}/include/vfs" "-I{build.compiler.sdk.path}/include/wear_levelling" "-I{build.compiler.sdk.path}/include/wifi_provisioning" "-I{build.compiler.sdk.path}/include/wpa_supplicant" "-I{build.compiler.sdk.path}/include/xtensa-debug-module" "-I{build.compiler.sdk.path}/include/esp32-camera" "-I{build.compiler.sdk.path}/include/esp-face" "-I{build.compiler.sdk.path}/include/fb_gfx"
abc.menu.mcu.esp.build.compiler.c.flags=-std=gnu99 -Os -g3 -fstack-protector -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -mlongcalls -nostdlib -w -Wpointer-arith -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wno-unused-parameter -Wno-sign-compare -Wno-old-style-declaration -MMD -c {build.compiler.cpreprocessor.flags} -DBRIKI_MBC_WB_ESP -D{build.extraCDC}
abc.menu.mcu.esp.build.compiler.cpp.cmd=xtensa-esp32-elf-g++
abc.menu.mcu.esp.build.compiler.cpp.flags=-std=gnu++11 -fno-exceptions -Os -g3 -Wpointer-arith -fexceptions -fstack-protector -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -mlongcalls -nostdlib -w -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wno-unused-parameter -Wno-sign-compare -fno-rtti -MMD -c {build.compiler.cpreprocessor.flags} -DBRIKI_MBC_WB_ESP -D{build.extraCDC}
abc.menu.mcu.esp.build.compiler.S.flags=-c -g3 -w -x assembler-with-cpp -MMD -mlongcalls {build.compiler.cpreprocessor.flags} -DBRIKI_MBC_WB_ESP
abc.menu.mcu.esp.build.compiler.c.elf.flags=-nostdlib "-L{build.compiler.sdk.path}/lib" "-L{build.compiler.sdk.path}/ld" -T esp32_out.ld -T esp32.common.ld -T esp32.rom.ld -T esp32.peripherals.ld -T esp32.rom.spiram_incompatible_fns.ld -u ld_include_panic_highint_hdl -u call_user_start_cpu0 -Wl,--gc-sections -Wl,-static -Wl,--undefined=uxTopUsedPriority  -u __cxa_guard_dummy -u __cxx_fatal_exception
abc.menu.mcu.esp.build.compiler.c.elf.libs=-lgcc -lopenssl -lbtdm_app -lfatfs -lwps -lcoexist -lwear_levelling -lesp_http_client -lprotobuf-c -lhal -lnewlib -ldriver -lbootloader_support -lpp -lfreemodbus -lmesh -lsmartconfig -ljsmn -lwpa -lethernet -lphy -lapp_trace -lconsole -lulp -lwpa_supplicant -lfreertos -lbt -lmicro-ecc -lesp32-camera -lcxx -lxtensa-debug-module -ltcp_transport -lmdns -lvfs -lesp_ringbuf -lsoc -lcore -lfb_gfx -lsdmmc -llibsodium -lcoap -ltcpip_adapter -lprotocomm -lesp_event -limage_util -lc_nano -lesp-tls -lasio -lrtc -lspi_flash -lwpa2 -lwifi_provisioning -lesp32 -lface_recognition -lapp_update -lnghttp -lspiffs -lface_detection -lespnow -lnvs_flash -lesp_adc_cal -llog -ldl_lib -lsmartconfig_ack -lexpat -lm -lfr -lmqtt -lc -lheap -lmbedtls -llwip -lnet80211 -lesp_http_server -lpthread -ljson -lesp_https_ota -lfd -lstdc++
abc.menu.mcu.esp.build.compiler.as.cmd=xtensa-esp32-elf-as
abc.menu.mcu.esp.build.compiler.ar.cmd=xtensa-esp32-elf-ar
abc.menu.mcu.esp.build.compiler.ar.flags=cru
abc.menu.mcu.esp.build.compiler.size.cmd=xtensa-esp32-elf-size
abc.menu.mcu.esp.build.compiler.arm.cmsis.c.flags=
abc.menu.mcu.esp.build.compiler.arm.cmsis.ldflags=

abc.menu.mcu.esp.build.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {compiler.c.elf.flags} {compiler.c.elf.extra_flags} -Wl,--start-group {object_files} "{build.path}/{archive_file}" {build.compiler.c.elf.libs} -Wl,--end-group -Wl,-EL -o "{build.path}/{build.project_name}.elf"
abc.menu.mcu.esp.build.bin.pattern={tools.gen_esp32part.cmd} -q "{runtime.platform.path}/tools/partitions/{build.partitions}.csv" "{build.path}/{build.project_name}.partitions.bin"
abc.menu.mcu.esp.build.hex.pattern="{tools.esptool.path}/{tools.esptool.cmd}" --chip esp32 elf2image --flash_mode "{build.flash_mode}" --flash_freq "{build.flash_freq}" --flash_size "{build.flash_size}" -o "{build.path}/{build.project_name}.bin" "{build.path}/{build.project_name}.elf"
abc.menu.mcu.esp.recipe.size.regex=^(?:\.iram0\.text|\.iram0\.vectors|\.dram0\.data|\.flash\.text|\.flash\.rodata|)\s+([0-9]+).*
abc.menu.mcu.esp.recipe.size.regex.data=^(?:\.dram0\.data|\.dram0\.bss|\.noinit)\s+([0-9]+).*